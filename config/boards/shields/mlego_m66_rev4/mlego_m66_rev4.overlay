/*
 * Copyright (c) 2022-2024 alin m elena
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>

/ {
   model = "mlego m66, rev4";

   //compatible = "nice-nano-v2";

   chosen {
     zmk,kscan = &kscan;
     zmk,matrix_transform = &m66;
     zephyr,console = &cdc_acm_uart;
   };

      m66: m66_0 {
        compatible = "zmk,matrix-transform";
        columns = <14>;
        rows = <5>;
/*
┌────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┬────┐
│ 0A │ 0B │ 0C │ 0D │ 0E │ 0F │ 0G │ 0H │ 0I │ 0J │ 0K │ 0L │ 0M │ 0N │
├────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┘
│ 1A │ 1B │ 1C │ 1D │ 1E │ 1F │ 1G │ 1H │ 1I │ 1J │ 1K │ 1L │ 1M │
├────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┤
│ 2A │ 2B │ 2C │ 2D │ 2E │ 2F │ 2G │ 2H │ 2I │ 2J │ 2K │ 2L │ 2M │
├────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┤
│ 3A │ 3B │ 3C │ 3D │ 3E │ 3F │ 3G │ 3H │ 3I │ 3J │ 3K │ 3L │ 3M │
├────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┼────┤
│ 4A │ 4B │ 4C │ 4D │ 4E │ 4F │ 4G │ 4H │ 4I │ 4J │ 4K │ 4L │ 4M │
└────┴────┴────┴────┴────┴────┴────┴────┴────┴────┴────┴────┴────┘

*/
        map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3)  RC(0,4) RC(0,5) RC(0,6) RC(0,7)  RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13)
RC(1,0) RC(1,1) RC(1,2) RC(1,3)  RC(1,4) RC(1,5) RC(1,6) RC(1,7)  RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) 
RC(2,0) RC(2,1) RC(2,2) RC(2,3)  RC(2,4) RC(2,5) RC(2,6) RC(2,7)  RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12) 
RC(3,0) RC(3,1) RC(3,2) RC(3,3)  RC(3,4) RC(3,5) RC(3,6) RC(3,7)  RC(3,8) RC(3,9) RC(3,10) RC(3,11) RC(3,12) 
RC(4,0) RC(4,1) RC(4,2) RC(4,3)  RC(4,4) RC(4,5) RC(4,6) RC(4,7)  RC(4,8) RC(4,9) RC(4,10) RC(4,11) RC(4,12) 
        >;
    };
   kscan: kscan {
     compatible = "zmk,kscan-gpio-matrix";
     diode-direction = "col2row";
     wakeup-source; 
     col-gpios =   <&shift_reg 2  (GPIO_ACTIVE_HIGH)>
                 , <&shift_reg 9  (GPIO_ACTIVE_HIGH)>
                 , <&shift_reg 10 (GPIO_ACTIVE_HIGH)>
                 , <&shift_reg 11 (GPIO_ACTIVE_HIGH)>
                 , <&shift_reg 12 (GPIO_ACTIVE_HIGH)>
                 , <&shift_reg 13 (GPIO_ACTIVE_HIGH)>
                 , <&shift_reg 14 (GPIO_ACTIVE_HIGH)>
                 , <&shift_reg 15 (GPIO_ACTIVE_HIGH)>
                 , <&shift_reg 3  (GPIO_ACTIVE_HIGH)>
                 , <&shift_reg 4  (GPIO_ACTIVE_HIGH)>
                 , <&shift_reg 5  (GPIO_ACTIVE_HIGH)>
                 , <&shift_reg 6  (GPIO_ACTIVE_HIGH)>
                 , <&shift_reg 7  (GPIO_ACTIVE_HIGH)>
                 , <&shift_reg 1  (GPIO_ACTIVE_HIGH)>
                 ;
     row-gpios =   <&pro_micro 0  (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                 , <&pro_micro 18 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                 , <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                 , <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                 , <&pro_micro 19 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                 ;
   };

   mlego_encoder: mlego_encoder {
     compatible = "alps,ec11";
     a-gpios = <&pro_micro 5 (GPIO_ACTIVE_HIGH )>;
     b-gpios = <&pro_micro 4 (GPIO_ACTIVE_HIGH )>;
     steps = <80>;
   };

   sensors {
     compatible = "zmk,keymap-sensors";
     sensors = <&mlego_encoder>;
     triggers-per-rotation = <20>;
   };
};

&mlego_encoder { 
  status = "okay"; 
};

&pinctrl {
    spi0_default: spi0_default {
        group1 {
            psels =   <NRF_PSEL( SPIM_SCK, 1, 13)> 
                    , <NRF_PSEL(SPIM_MOSI, 0, 10)>
                    , <NRF_PSEL(SPIM_MISO, 1, 11)>
                    ;
        };
    };
    spi0_sleep: spi0_sleep {
        group1 {
            psels =   <NRF_PSEL( SPIM_SCK, 1, 13)> 
                    , <NRF_PSEL(SPIM_MOSI, 0, 10)>
                    , <NRF_PSEL(SPIM_MISO, 1, 11)>
                    ;
            low-power-enable;
        };
    };
};

&pro_micro_i2c {
    status = "disabled";
};

board_spi: &spi0 {
  status = "okay";
  compatible = "nordic,nrf-spim";
  pinctrl-0 = <&spi0_default>;
  pinctrl-1 = <&spi0_sleep>;
  pinctrl-names = "default", "sleep";
  wakeup-source; 
  cs-gpios = <&pro_micro 10 GPIO_ACTIVE_LOW> ;

  shift_reg: 595@0 {
    compatible = "zmk,gpio-595";
    status = "okay";
    wakeup-source; 
    gpio-controller;
    spi-max-frequency = <2000000>;
    #gpio-cells = <2>;
    reg = <0>;
    ngpios = <16>;
  };
};

&usbd {
    status = "okay";
    cdc_acm_uart: cdc_acm_uart {
        compatible = "zephyr,cdc-acm-uart";
    };
};
