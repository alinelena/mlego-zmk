/*
 * Copyright (c) 2022 alin m elena
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/led/led.h>

/ {
   model = "mlego m4, rev1";
   compatible = "mlego", "seeduino,xiao_ble";

   chosen {
     zmk,kscan = &kscan;
     zephyr,display = &oled;
     /*
     zmk,led-capslock = &led_capslock;
     zmk,led-widgets-dev = &leds_i;
     */
   };

   kscan: kscan {
     compatible = "zmk,kscan-gpio-matrix";
     label = "kscan";
     diode-direction = "col2row";
     col-gpios = <&shift_reg 0 (GPIO_ACTIVE_HIGH)>
                 , <&shift_reg 8 (GPIO_ACTIVE_HIGH)>
                 ;
     row-gpios = <&xiao_d 0(GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                 ,<&xiao_d 3(GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
                 ;
   };
   mlego_encoder: mlego_encoder {
     compatible = "alps,ec11";
     label = "mlego encoder";
     a-gpios = <&xiao_d 1(GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
     b-gpios = <&xiao_d 2(GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
     resolution = <4>;
   };

   sensors {
     compatible = "zmk,keymap-sensors";
     sensors = <&mlego_encoder>;
   };
/*
    led_indicators {
        compatible = "gpio-leds";
        label = "LED indicators";
        led_capslock: led_capslock {
            gpios = <&gpio0 26 GPIO_ACTIVE_LOW>;
            label = "Caps lock LED";
        };
    };

   leds_i: leds_i {
     compatible = "pwm-leds";
     label = "leds layers";
     red_led: led_r {
       pwms = <&pwm0 6>;
       label = "red";
     };
     green_led: led_g {
       pwms = <&pwm0 30>;
       label = "green";
     };
     blue_led: led_b {
       pwms = <&pwm0 26>;
       label = "blue";
     };
   };

   led-widgets {
        compatible = "zmk,led-widgets";
        boot {
            boot {
                priority = <100>;
                blue { len-ms = <100>; brightness = <0 0 50>; };
                off { len-ms = <100>; };
                blue2 { len-ms = <100>; brightness = <0 0 50>; };
            };
        };
        layer {
            lower {
                arg = <1>;
                priority = <20>;
                stat { brightness = <0 0 20>; };
            };
            raise {
                arg = <2>;
                priority = <20>;
                stat { brightness = <0 20 0>; };
            };
            adjust {
                arg = <3>;
                priority = <20>;
                stat { brightness = <20 0 0>; };
            };
        };
   };
*/
};

/*
&pwm0 {
    status = "okay";
    ch0-pin = <26>;
    ch1-pin = <30>;
    ch2-pin = <6>;
    ch0-inverted;
    ch1-inverted;
    ch2-inverted;
};
*/
&mlego_encoder { 
  status = "okay"; 
};

&xiao_spi {
  status = "okay";

  cs-gpios = <&xiao_d 7 GPIO_ACTIVE_LOW>, <&xiao_d 6 GPIO_ACTIVE_HIGH>;
  shift_reg: 595@0 {
    compatible = "zmk,gpio-595";
    status = "okay";
    gpio-controller;
    spi-max-frequency = <200000>;
    #gpio-cells = <2>;
    reg = <0>;
    label = "4HC595";
    ngpios = <16>;
  };
};

&xiao_serial { 
  status = "disabled"; 
};

&i2c0 {
  status = "okay";
  clock-frequency = <I2C_BITRATE_STANDARD>;

  oled: ssd1306@3c {
    compatible = "solomon,ssd1306fb";
    reg = <0x3c>;
    label = "DISPLAY";
    width = <0x80>;
    height = <0x20>;
    segment-offset = <0x0>;
    page-offset = <0x0>;
    display-offset = <0x0>;
    multiplex-ratio = <0x1f>;
    com-sequential;
    prechargep = <0x22>;
  };
};
